from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import Command
from aiogram.types import CallbackQuery, Update, ReplyKeyboardRemove, message
import asyncpg.exceptions
from data.week import week
from keyboards.inline.Days_of_week import choice_on_morning_time, choose_day_week, choose_new_time
from keyboards.inline.Days_of_week import keyboard_constructor_day
from keyboards.inline.call_back_week import week_callback
from loader import dp, db
from states.Week_states import ChangeDay
from aiogram.dispatcher import FSMContext
from states import Week
from utils.db_api import quic_commands as commands


@dp.message_handler(Command("change_regimen"))
async def send_message(message: types.Message):
    await message.answer(text="<b>–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º</b>\n"
                              "<b>—Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–ºüëá</b>",
                         reply_markup=choose_day_week
                         )
    await ChangeDay.ChooseDay.set()


@dp.message_handler(state=ChangeDay.ChooseDay)
async def send_text(message: types.Message, state: FSMContext):
    day_of_the_week = message.text
    result = ""
    user = await commands.select_user(telegram_id=message.from_user.id)
    if day_of_the_week == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
        result = user.regimen_on_monday
    elif day_of_the_week == "–í—Ç–æ—Ä–Ω–∏–∫":
        result = user.regimen_on_tuesday
    elif day_of_the_week == "–°—Ä–µ–¥–∞":
        result = user.regimen_on_wednesday
    elif day_of_the_week == "–ß–µ—Ç–≤–µ—Ä–≥":
        result = user.regimen_on_thursday
    elif day_of_the_week == "–ü—è—Ç–Ω–∏—Ü–∞":
        result = user.regimen_on_friday
    elif day_of_the_week == "–°—É–±–±–æ—Ç–∞":
        result = user.regimen_on_saturday
    elif day_of_the_week == "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
        result = user.regimen_on_sunday
    await message.answer(f"<b>–°–µ–π—á–∞—Å —Ç–≤–æ–π —Ä–µ–∂–∏–º –¥–Ω—è –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:</b>\n"
                         f"{result}", reply_markup=ReplyKeyboardRemove())
    await message.answer(f"<b>–ù–∞–ø–∏—à–∏ –Ω–æ–≤—ã–π —Ä–µ–∂–∏–º</b>üòä")
    await state.update_data(day=day_of_the_week)
    await ChangeDay.NewRegimen.set()


@dp.message_handler(state=ChangeDay.NewRegimen)
async def enter_regimen(message: types.Message, state: FSMContext):
    data = await state.get_data()
    day = data.get("day")
    telegram_id = message.from_user.id
    new_regimen = message.text
    if day == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
        await commands.update_regimen_on_monday(telegram_id, new_regimen)
    elif day == "–í—Ç–æ—Ä–Ω–∏–∫":
        await commands.update_regimen_on_tuesday(telegram_id, new_regimen)
    elif day == "–°—Ä–µ–¥–∞":
        await commands.update_regimen_on_wednesday(telegram_id, new_regimen)
    elif day == "–ß–µ—Ç–≤–µ—Ä–≥":
        await commands.update_regimen_on_thursday(telegram_id, new_regimen)
    elif day == "–ü—è—Ç–Ω–∏—Ü–∞":
        await commands.update_regimen_on_friday(telegram_id, new_regimen)
    elif day == "–°—É–±–±–æ—Ç–∞":
        await commands.update_regimen_on_saturday(telegram_id, new_regimen)
    elif day == "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
        await commands.update_regimen_on_sunday(telegram_id, new_regimen)

    # user = await commands.select_user(telegram_id=message.from_user.id)
    await message.answer(f"<i><b>–¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å\n –Ω–æ–≤—ã–π —Ä–µ–∂–∏–º –¥–Ω—è!</b></i>\n"
                         f"<b>–í—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ —É—Ç—Ä–æ–º\n"
                         f"–±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä–µ–∂–∏–º –Ω–∞ –¥–µ–Ω—å</b>",
                         reply_markup=choice_on_morning_time)
    await ChangeDay.NewTime.set()


@dp.message_handler(state=ChangeDay.NewTime)
async def enter_time(message: types.Message, state: FSMContext):
    result_about_time = int(message.text[0])
    await commands.update_time(message.from_user.id, result_about_time)
    await message.answer(text="<b>–î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ãüòâ</b>",
                         reply_markup=ReplyKeyboardRemove())
    await state.reset_state(with_data=True)
